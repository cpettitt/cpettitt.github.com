{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js","dagre-d3.core.js","lib/arrows.js","lib/create-clusters.js","lib/create-edge-labels.js","lib/create-edge-paths.js","lib/create-nodes.js","lib/d3.js","lib/dagre.js","lib/graphlib.js","lib/intersect/index.js","lib/intersect/intersect-circle.js","lib/intersect/intersect-ellipse.js","lib/intersect/intersect-line.js","lib/intersect/intersect-node.js","lib/intersect/intersect-polygon.js","lib/intersect/intersect-rect.js","lib/label/add-html-label.js","lib/label/add-label.js","lib/label/add-svg-label.js","lib/label/add-text-label.js","lib/lodash.js","lib/position-clusters.js","lib/position-edge-labels.js","lib/position-nodes.js","lib/render.js","lib/shapes.js","lib/util.js","lib/version.js"],"names":["e","exports","module","define","amd","f","window","global","self","dagreD3","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"graphlib","dagre","intersect","render","util","version","./lib/dagre","./lib/graphlib","./lib/intersect","./lib/render","./lib/util","./lib/version",2,"normal","parent","id","edge","type","marker","append","attr","path","style","applyStyle","vee","undirected","default","./util",3,"createClusters","selection","g","clusters","nodes","filter","v","isSubgraph","svgClusters","selectAll","data","remove","enter","node","applyTransition","each","thisGroup","d3","select","this","labelGroup","addLabel","clusterLabelPos","c","domCluster","exit","./label/add-label",4,"createEdgeLabels","svgEdgeLabels","edges","edgeToId","classed","label","bbox","getBBox","labelId","_","has","width","height","./d3","./lodash",5,"createEdgePaths","arrows","svgPaths","domEdge","elem","applyClass","arrowheadId","uniqueId","calcPoints","arrowhead","tail","head","w","points","slice","unshift","intersectNode","push","createLine","line","svg","x","d","y","interpolate","lineInterpolate","tension","Number","lineTension","getCoords","matrix","getTransformToElement","ownerSVGElement","translate","svgPathsEnter","sourceElem","range","map","svgPathExit","source","pathSegList","./intersect/intersect-node",6,"createNodes","shapes","simpleNodes","svgNodes","labelDom","shape","pick","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox",7,8,"undefined",9,10,"circle","ellipse","polygon","rect","./intersect-circle","./intersect-ellipse","./intersect-node","./intersect-polygon","./intersect-rect",11,"intersectCircle","rx","point","intersectEllipse",12,"ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy",13,"intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","yy",14,15,"intersectPolygon","polyPoints","x1","y1","intersections","minX","POSITIVE_INFINITY","minY","forEach","entry","min","left","top","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","console","log","./intersect-line",16,"intersectRect","sx","sy","h",17,"addHtmlLabel","root","fo","div","insert","html","labelStyle","clientWidth","clientHeight","../util",18,"location","labelSvg","labelType","addSVGLabel","addTextLabel","labelBBox","./add-html-label","./add-svg-label","./add-text-label",19,"domNode","appendChild",20,"lines","processEscapeSequences","split","text","ch","newText","escaped",21,"lodash",22,"positionClusters","created",23,"positionEdgeLabels",24,"positionNodes",25,"fn","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","layout","postProcessGraph","value","arguments","children","defaults","paddingX","paddingY","padding","NODE_DEFAULT_ATTRS","k","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","name","empty","./arrows","./create-clusters","./create-edge-labels","./create-edge-paths","./create-nodes","./dagre","./position-clusters","./position-edge-labels","./position-nodes","./shapes",26,"max","diamond","SQRT2","join","./intersect/intersect-circle","./intersect/intersect-ellipse","./intersect/intersect-polygon","./intersect/intersect-rect",27,"escapeId","str","String","replace","ID_DELIM","dom","styleFn","classFn","otherClasses","graph","isPlainObject","transition","isFunction",28],"mappings":"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","file":"dagre-d3.core.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"./lib/graphlib\"),\n  dagre: require(\"./lib/dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.dagreD3=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"./lib/graphlib\"),\n  dagre: require(\"./lib/dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n\n},{\"./lib/dagre\":8,\"./lib/graphlib\":9,\"./lib/intersect\":10,\"./lib/render\":25,\"./lib/util\":27,\"./lib/version\":28}],2:[function(require,module,exports){\nvar util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\n},{\"./util\":27}],3:[function(require,module,exports){\nvar util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.selectAll(\"*\").remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    d3.select(this).append(\"rect\");\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n\n},{\"./label/add-label\":18,\"./util\":27}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.selectAll(\"*\").remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n\n},{\"./d3\":7,\"./label/add-label\":18,\"./lodash\":21,\"./util\":27}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n          return \"url(#\" + edge.arrowheadId + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w),\n      points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.getTransformToElement(elem.ownerSVGElement)\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.pathSegList.length).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n\n},{\"./d3\":7,\"./intersect/intersect-node\":14,\"./lodash\":21,\"./util\":27}],6:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.selectAll(\"*\").remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n        labelDom = addLabel(labelGroup, node),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n\n},{\"./d3\":7,\"./label/add-label\":18,\"./lodash\":21,\"./util\":27}],7:[function(require,module,exports){\n// Stub to get D3 either via NPM or from the global object\nmodule.exports = window.d3;\n\n},{}],8:[function(require,module,exports){\n/* global window */\n\nvar dagre;\n\nif (require) {\n  try {\n    dagre = require(\"dagre\");\n  } catch (e) {}\n}\n\nif (!dagre) {\n  dagre = window.dagre;\n}\n\nmodule.exports = dagre;\n\n},{\"dagre\":undefined}],9:[function(require,module,exports){\n/* global window */\n\nvar graphlib;\n\nif (require) {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n},{\"graphlib\":undefined}],10:[function(require,module,exports){\nmodule.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n\n},{\"./intersect-circle\":11,\"./intersect-ellipse\":12,\"./intersect-node\":14,\"./intersect-polygon\":15,\"./intersect-rect\":16}],11:[function(require,module,exports){\nvar intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\n},{\"./intersect-ellipse\":12}],12:[function(require,module,exports){\nmodule.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n\n},{}],13:[function(require,module,exports){\nmodule.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.yy) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\n},{}],14:[function(require,module,exports){\nmodule.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\n},{}],15:[function(require,module,exports){\nvar intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n\n},{\"./intersect-line\":13}],16:[function(require,module,exports){\nmodule.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n\n},{}],17:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root\n    .append(\"foreignObject\")\n      .attr(\"width\", \"100000\");\n\n  var div = fo\n    .append(\"xhtml:div\");\n\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  // TODO find a better way to get dimensions for foreignObjects...\n  var w, h;\n  div\n    .each(function() {\n      w = this.clientWidth;\n      h = this.clientHeight;\n    });\n\n  fo\n    .attr(\"width\", w)\n    .attr(\"height\", h);\n\n  return fo;\n}\n\n},{\"../util\":27}],18:[function(require,module,exports){\nvar addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append(\"g\");\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2);\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - labelBBox.height;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n\n},{\"./add-html-label\":17,\"./add-svg-label\":19,\"./add-text-label\":20}],19:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\n},{\"../util\":27}],20:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\n},{\"../util\":27}],21:[function(require,module,exports){\n/* global window */\n\nvar lodash;\n\nif (require) {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n},{\"lodash\":undefined}],22:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n\n},{\"./d3\":7,\"./util\":27}],23:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\"),\n    _ = require(\"./lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":7,\"./lodash\":21,\"./util\":27}],24:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":7,\"./util\":27}],25:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\"),\n        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n\n},{\"./arrows\":2,\"./create-clusters\":3,\"./create-edge-labels\":4,\"./create-edge-paths\":5,\"./create-nodes\":6,\"./dagre\":8,\"./lodash\":21,\"./position-clusters\":22,\"./position-edge-labels\":23,\"./position-nodes\":24,\"./shapes\":26}],26:[function(require,module,exports){\n\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\n},{\"./intersect/intersect-circle\":11,\"./intersect/intersect-ellipse\":12,\"./intersect/intersect-polygon\":15,\"./intersect/intersect-rect\":16}],27:[function(require,module,exports){\nvar _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n},{\"./lodash\":21}],28:[function(require,module,exports){\nmodule.exports = \"0.4.8\";\n\n},{}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","var util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n","var util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.selectAll(\"*\").remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    d3.select(this).append(\"rect\");\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.selectAll(\"*\").remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n          return \"url(#\" + edge.arrowheadId + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w),\n      points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.getTransformToElement(elem.ownerSVGElement)\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.pathSegList.length).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.selectAll(\"*\").remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n        labelDom = addLabel(labelGroup, node),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n","// Stub to get D3 either via NPM or from the global object\nmodule.exports = window.d3;\n","/* global window */\n\nvar dagre;\n\nif (require) {\n  try {\n    dagre = require(\"dagre\");\n  } catch (e) {}\n}\n\nif (!dagre) {\n  dagre = window.dagre;\n}\n\nmodule.exports = dagre;\n","/* global window */\n\nvar graphlib;\n\nif (require) {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n","module.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n","var intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","module.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n","module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.yy) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","module.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","var intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n","module.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n","var util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root\n    .append(\"foreignObject\")\n      .attr(\"width\", \"100000\");\n\n  var div = fo\n    .append(\"xhtml:div\");\n\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  // TODO find a better way to get dimensions for foreignObjects...\n  var w, h;\n  div\n    .each(function() {\n      w = this.clientWidth;\n      h = this.clientHeight;\n    });\n\n  fo\n    .attr(\"width\", w)\n    .attr(\"height\", h);\n\n  return fo;\n}\n","var addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append(\"g\");\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2);\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - labelBBox.height;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","/* global window */\n\nvar lodash;\n\nif (require) {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\"),\n    _ = require(\"./lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","var _ = require(\"./lodash\"),\n    layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\"),\n        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n","\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","var _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","module.exports = \"0.4.8\";\n"],"sourceRoot":"/source/"}